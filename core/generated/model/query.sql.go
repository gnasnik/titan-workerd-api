// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: query.sql

package model

import (
	"context"
)

const getUserByUsername = `-- name: GetUserByUsername :one
SELECT id, uuid, avatar, username, pass_hash, user_email, wallet_address, role, allocate_storage, created_at, updated_at, deleted_at, project_id, referral_code, referrer, referrer_user_id FROM ` + "`" + `users` + "`" + ` WHERE username = ? LIMIT 1
`

func (q *Queries) GetUserByUsername(ctx context.Context, db DBTX, username string) (User, error) {
	row := db.QueryRowContext(ctx, getUserByUsername, username)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Uuid,
		&i.Avatar,
		&i.Username,
		&i.PassHash,
		&i.UserEmail,
		&i.WalletAddress,
		&i.Role,
		&i.AllocateStorage,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DeletedAt,
		&i.ProjectID,
		&i.ReferralCode,
		&i.Referrer,
		&i.ReferrerUserID,
	)
	return i, err
}
